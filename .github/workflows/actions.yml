name: HAS
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
env:
  CARGO_TERM_COLOR: always
jobs:
  lint:
    name: Lint and format on ${{matrix.os}}, with ${{matrix.toolchain}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - ubuntu-18.04
          - ubuntu-16.04
          - windows-latest
          - windows-2019
          - macos-latest
          - macos-10.15
        toolchain: [stable, nightly]
    steps:
      - env:
          RUSTFLAGS: "-D warnings"
      - uses: actions/checkout@v2
      - name: Lint and format with ${{matrix.toolchain}}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{matrix.toolchain}}
          components: rustfmt, clippy
  check:
    name: Check on ${{matrix.os}}, with ${{matrix.toolchain}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - ubuntu-18.04
          - ubuntu-16.04
          - windows-latest
          - windows-2019
          - macos-latest
          - macos-10.15
        toolchain: [stable, nightly]
    steps:
      - env:
          RUSTFLAGS: "-D warnings"
      - uses: actions/checkout@v2
      - name: Install toolchain ${{matrix.toolchain}}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{matrix.toolchain}}
      - name: Check with ${{matrix.toolchain}}
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-features
  test:
    name: Test on ${{matrix.os}}, with ${{matrix.toolchain}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - ubuntu-18.04
          - ubuntu-16.04
          - windows-latest
          - windows-2019
          - macos-latest
          - macos-10.15
        toolchain: [stable, nightly]
    steps:
      - env:
          RUSTFLAGS: "-D warnings"
      - uses: actions/checkout@v2
      - name: Install toolchain ${{matrix.toolchain}}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{matrix.toolchain}}
      - name: Test with ${{matrix.toolchain}}
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features
  docs:
    name: Documentation build on ${{matrix.os}}, with ${{matrix.toolchain}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - ubuntu-18.04
          - ubuntu-16.04
          - windows-latest
          - windows-2019
          - macos-latest
          - macos-10.15
        toolchain: [stable, nightly]
    steps:
      - env:
          RUSTFLAGS: "-D warnings"
      - uses: actions/checkout@v2
      - name: Install toolchain ${{matrix.toolchain}}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{matrix.toolchain}}
      - name: Documentation build with ${{matrix.toolchain}}
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --all-features --no-deps
  release:
    name: Release build on ${{matrix.os}}, with ${{matrix.toolchain}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - ubuntu-18.04
          - ubuntu-16.04
          - windows-latest
          - windows-2019
          - macos-latest
          - macos-10.15
        toolchain: [stable, nightly]
    steps:
      - env:
          RUSTFLAGS: "-D warnings"
      - uses: actions/checkout@v2
      - name: Install toolchain ${{matrix.toolchain}}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{matrix.toolchain}}
      - name: Release build with ${{matrix.toolchain}}
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features --release
